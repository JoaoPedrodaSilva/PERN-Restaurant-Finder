{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jo\\xE3o Pedro\\\\Dropbox\\\\VisualStudioCode\\\\PortfolioWebsite\\\\projects\\\\PERN-Restaurant-Finder\\\\client\\\\src\\\\components\\\\ReviewRestaurantForm.jsx\",\n    _s = $RefreshSig$();\n\n//react imports\nimport React, { useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport axios from '../apis/axios';\nimport { useGlobalContext } from '../globalContext'; //bootstrap imports\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReviewRestaurantForm = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const {\n    reviewerName,\n    setReviewerName,\n    reviewerText,\n    setReviewerText,\n    reviewerRating,\n    setReviewerRating\n  } = useGlobalContext();\n  useEffect(() => {\n    setReviewerName('');\n    setReviewerText('');\n    setReviewerRating('Rating');\n  }, []);\n\n  const handleReview = async event => {\n    event.preventDefault();\n\n    try {\n      await axios.post(`/${id}/addReview`, {\n        name: reviewerName,\n        review: reviewerText,\n        rating: reviewerRating\n      });\n      setReviewerName('');\n      setReviewerText('');\n      setReviewerRating('Rating');\n      window.location.reload(true);\n    } catch (error) {\n      console.log(error);\n    }\n  }; //rendering component\n\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"d-flex flex-column gap-4\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mx-1\",\n        controlId: \"reviwerNameForm\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Type your name\",\n          value: reviewerName,\n          onChange: event => setReviewerName(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mx-1\",\n        controlId: \"ratingForm\",\n        children: /*#__PURE__*/_jsxDEV(Form.Select, {\n          \"aria-label\": \"ratingSelect\",\n          className: \"text-muted text-truncate\",\n          value: reviewerRating,\n          onChange: event => setReviewerRating(event.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2\",\n            children: \"$$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"3\",\n            children: \"$$$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"4\",\n            children: \"$$$$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"5\",\n            children: \"$$$$$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mx-1\",\n      controlId: \"reviewTextForm\",\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"textarea\",\n        rows: 3,\n        type: \"text\",\n        placeholder: \"Type your review...\",\n        value: reviewerText,\n        onChange: event => setReviewerText(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"align-self-start px-4\",\n      variant: \"primary\",\n      type: \"submit\",\n      onClick: event => handleReview(event),\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/`,\n        className: \"text-white text-decoration-none\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 13\n  }, this) // <form>\n  //     <div className='row'>\n  //         <label htmlFor=\"reviewerName\">Name:</label>\n  //         <input\n  //             id='reviewerName'\n  //             type=\"text\"\n  //             value={reviewerName}\n  //             onChange={event => setReviewerName(event.target.value)}\n  //         />\n  //         <label htmlFor=\"rating\">Rating:</label>\n  //         <select\n  //             id='rating'\n  //             type=\"text\"\n  //             value={reviewerRating}\n  //             onChange={event => setReviewerRating(event.target.value)}\n  //         >\n  //             <option disabled>Rating</option>\n  //             <option value=\"1\">1</option>\n  //             <option value=\"2\">2</option>\n  //             <option value=\"3\">3</option>\n  //             <option value=\"4\">4</option>\n  //             <option value=\"5\">5</option>\n  //         </select>\n  //     </div>\n  //     <label htmlFor=\"review\">Review:</label>\n  //     <textarea\n  //         id=\"review\"\n  //         cols=\"78\"\n  //         rows=\"10\"\n  //         value={reviewerText}\n  //         onChange={event => setReviewerText(event.target.value)}\n  //     />\n  //     <button\n  //         type='submit'\n  //         onClick={event => handleReview(event)}\n  //     >                    \n  //         Submit                           \n  //     </button>\n  // </form>\n  ;\n};\n\n_s(ReviewRestaurantForm, \"F6qe04ZgJ7/w2JEu6LUkgospY4k=\", false, function () {\n  return [useParams, useGlobalContext];\n});\n\n_c = ReviewRestaurantForm;\nexport default ReviewRestaurantForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReviewRestaurantForm\");","map":{"version":3,"names":["React","useEffect","useParams","Link","axios","useGlobalContext","Form","Button","Row","ReviewRestaurantForm","id","reviewerName","setReviewerName","reviewerText","setReviewerText","reviewerRating","setReviewerRating","handleReview","event","preventDefault","post","name","review","rating","window","location","reload","error","console","log","target","value"],"sources":["C:/Users/JoÃ£o Pedro/Dropbox/VisualStudioCode/PortfolioWebsite/projects/PERN-Restaurant-Finder/client/src/components/ReviewRestaurantForm.jsx"],"sourcesContent":["//react imports\r\nimport React, {useEffect} from 'react'\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport axios from '../apis/axios'\r\nimport { useGlobalContext } from '../globalContext'\r\n\r\n//bootstrap imports\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Row from 'react-bootstrap/Row'\r\n\r\nconst ReviewRestaurantForm = () => {\r\n    const {id} = useParams()\r\n\r\n    const {\r\n        reviewerName, setReviewerName,        \r\n        reviewerText, setReviewerText,\r\n        reviewerRating, setReviewerRating\r\n    } = useGlobalContext()\r\n\r\n    useEffect(() => {\r\n      setReviewerName('')\r\n      setReviewerText('')\r\n      setReviewerRating('Rating')\r\n  }, [])\r\n\r\n    const handleReview = async event => {\r\n        event.preventDefault()\r\n        try {\r\n            await axios.post(`/${id}/addReview`, {\r\n                name: reviewerName,\r\n                review: reviewerText,\r\n                rating: reviewerRating\r\n            })\r\n\r\n            setReviewerName('')\r\n            setReviewerText('')\r\n            setReviewerRating('Rating')\r\n            window.location.reload(true);\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }   \r\n\r\n    //rendering component\r\n    return (\r\n            <Form className='d-flex flex-column gap-4'>\r\n                <Row>\r\n                    <Form.Group className=\"mx-1\" controlId=\"reviwerNameForm\">\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Type your name\"\r\n                            value={reviewerName}\r\n                            onChange={event => setReviewerName(event.target.value)}    \r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mx-1\" controlId=\"ratingForm\">\r\n                        <Form.Select\r\n                            aria-label=\"ratingSelect\"\r\n                            className='text-muted text-truncate'\r\n                            value={reviewerRating}\r\n                            onChange={event => setReviewerRating(event.target.value)}    \r\n                        >\r\n                            <option>Rating</option>\r\n                            <option value=\"1\">$</option>\r\n                            <option value=\"2\">$$</option>\r\n                            <option value=\"3\">$$$</option>\r\n                            <option value=\"4\">$$$$</option>\r\n                            <option value=\"5\">$$$$$</option>\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n                </Row>\r\n\r\n            <Form.Group className=\"mx-1\" controlId=\"reviewTextForm\">\r\n                <Form.Control as=\"textarea\" rows={3}\r\n                    type=\"text\"\r\n                    placeholder=\"Type your review...\"\r\n                    value={reviewerText}\r\n                    onChange={event => setReviewerText(event.target.value)}\r\n                />\r\n            </Form.Group>\r\n\r\n            \r\n\r\n             \r\n            <Button className='align-self-start px-4' variant=\"primary\" type='submit' onClick={event => handleReview(event)}> \r\n                <Link to={`/`} className='text-white text-decoration-none'>                       \r\n                    Update   \r\n                </Link>\r\n            </Button>            \r\n        </Form>\r\n\r\n            // <form>\r\n            //     <div className='row'>\r\n            //         <label htmlFor=\"reviewerName\">Name:</label>\r\n            //         <input\r\n            //             id='reviewerName'\r\n            //             type=\"text\"\r\n            //             value={reviewerName}\r\n            //             onChange={event => setReviewerName(event.target.value)}\r\n            //         />\r\n\r\n            //         <label htmlFor=\"rating\">Rating:</label>\r\n            //         <select\r\n            //             id='rating'\r\n            //             type=\"text\"\r\n            //             value={reviewerRating}\r\n            //             onChange={event => setReviewerRating(event.target.value)}\r\n            //         >\r\n            //             <option disabled>Rating</option>\r\n            //             <option value=\"1\">1</option>\r\n            //             <option value=\"2\">2</option>\r\n            //             <option value=\"3\">3</option>\r\n            //             <option value=\"4\">4</option>\r\n            //             <option value=\"5\">5</option>\r\n            //         </select>\r\n            //     </div>\r\n\r\n            //     <label htmlFor=\"review\">Review:</label>\r\n            //     <textarea\r\n            //         id=\"review\"\r\n            //         cols=\"78\"\r\n            //         rows=\"10\"\r\n            //         value={reviewerText}\r\n            //         onChange={event => setReviewerText(event.target.value)}\r\n            //     />\r\n\r\n            //     <button\r\n            //         type='submit'\r\n            //         onClick={event => handleReview(event)}\r\n            //     >                    \r\n            //         Submit                           \r\n            //     </button>\r\n            // </form>\r\n    )\r\n}\r\n\r\nexport default ReviewRestaurantForm"],"mappings":"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"},"metadata":{},"sourceType":"module"}